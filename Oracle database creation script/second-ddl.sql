-- Mark -- 30 Nov -- 1. to 6. Create six tables for the multivalue and the timestamp
-- Mark -- 30 Nov -- 7. Delete the history tables

-- Create Artist table and subtables
CREATE TABLE Artist (
    ArtistID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Type NVARCHAR2(50) CHECK (Type IN ('solo', 'group')),
    Name NVARCHAR2(50) UNIQUE,
    Country NVARCHAR2(50)
);

CREATE TABLE SoloArtist (
    ArtistID NUMBER PRIMARY KEY,
    CONSTRAINT FK_SoloArtist_Artist FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID)
);

CREATE TABLE GroupArtist (
    ArtistID NUMBER PRIMARY KEY,
    CONSTRAINT FK_GroupArtist_Artist FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID)
);

-- Mark -- 30 Nov -- 1. Create Type table for the multivalue
CREATE TABLE Type (
    TypeID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Type NVARCHAR2(50) NOT NULL
);

-- Mark -- 30 Nov -- 2. Create ArtistType intermediate table for the timestamp
CREATE TABLE ArtistType (
    ArtistTypeID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    StartDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EndDate TIMESTAMP DEFAULT NULL,
    ArtistID NUMBER NOT NULL,
    TypeID NUMBER NOT NULL,
    HistoryType NVARCHAR2(50) DEFAULT NULL,
    CONSTRAINT FK_ArtistType_Artist FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID),
    CONSTRAINT FK_ArtistType_Type FOREIGN KEY (TypeID) REFERENCES Type(TypeID)
);

-- Create Album table
CREATE TABLE Album (
    AlbumID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Title NVARCHAR2(255), -- AlbumName
    ReleaseDate DATE,
    Genre NVARCHAR2(50),
    ArtistID NUMBER,
    CONSTRAINT FK_Album_Artist FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID)
);

-- Mark -- 30 Nov -- 3. Create Genre table for the multivalue
CREATE TABLE Genre (
    GenreID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Genre NVARCHAR2(50) NOT NULL
);

-- Mark -- 30 Nov -- 4. Create AlbumGenre intermediate table for the timestamp
CREATE TABLE AlbumGenre (
    AlbumGenreID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    StartDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EndDate TIMESTAMP DEFAULT NULL,
    AlbumID NUMBER NOT NULL,
    GenreID NUMBER NOT NULL,
    HistoryGenre NVARCHAR2(50) DEFAULT NULL,
    CONSTRAINT FK_AlbumGenre_Album FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID),
    CONSTRAINT FK_AlbumGenre_Genre FOREIGN KEY (GenreID) REFERENCES Genre(GenreID)
);

-- Create Contributor table
CREATE TABLE Contributor (
    ContributorID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name NVARCHAR2(100) UNIQUE,
    Role NVARCHAR2(50)
);

-- Create Song table
CREATE TABLE Song (
    SongID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Title NVARCHAR2(50), -- SongName
    DurationInSeconds NUMBER,
    Language NVARCHAR2(50),
    IsExplicit NUMBER(1), -- 0 or 1 for boolean
    AlbumID NUMBER,
    TrackNumber NUMBER, 
    CONSTRAINT FK_Song_Album FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID)
);

-- Mark -- 30 Nov -- 5. Create TrackNumber table for the multivalue
CREATE TABLE TrackNumber (
    TrackNumberID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TrackNumber NUMBER NOT NULL
);

-- Mark -- 30 Nov -- 6. Create SongTrackNumber intermediate table for the timestamp
CREATE TABLE SongTrackNumber (
    SongTrackNumberID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    StartDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EndDate TIMESTAMP DEFAULT NULL,
    SongID NUMBER NOT NULL,
    TrackNumberID NUMBER NOT NULL,
    HistoryTrackNumber NUMBER DEFAULT NULL,
    CONSTRAINT FK_SongTrackNumber_Song FOREIGN KEY (SongID) REFERENCES Song(SongID),
    CONSTRAINT FK_SongTrackNumber_TrackNumber FOREIGN KEY (TrackNumberID) REFERENCES TrackNumber(TrackNumberID)
);

-- Create the many-to-many table
CREATE TABLE ContributorSong (
    SongID NUMBER,
    ContributorID NUMBER,
    PRIMARY KEY (SongID, ContributorID),
    CONSTRAINT FK_ContributorSong_Song FOREIGN KEY (SongID) REFERENCES Song(SongID),
    CONSTRAINT FK_ContributorSong_Contributor FOREIGN KEY (ContributorID) REFERENCES Contributor(ContributorID)
);

-- Mark -- 30 Nov -- 7. Delete the history tables
/*
-- Create the historical table for Artist Type
-- CREATE TABLE ArtistTypeHistory (
    ArtistID NUMBER NOT NULL,
    Type NVARCHAR2(50) CHECK (Type IN ('solo', 'group')),
    StartTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EndTime TIMESTAMP,
    PRIMARY KEY (ArtistID, StartTime),
    FOREIGN KEY (ArtistID) REFERENCES Artist(ArtistID)
);

-- Create the historical table for Track Numbers in Songs
CREATE TABLE TrackSongHistory (
    SongID NUMBER NOT NULL,
    AlbumID NUMBER NOT NULL,
    TrackNumber NUMBER,
    StartTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EndTime TIMESTAMP,
    PRIMARY KEY (SongID, AlbumID, StartTime),
    FOREIGN KEY (SongID) REFERENCES Song(SongID),
    FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID)
);

-- Create the historical table for Album Genres
CREATE TABLE AlbumGenreHistory (
    AlbumID NUMBER NOT NULL,
    Genre NVARCHAR2(50),
    StartTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EndTime TIMESTAMP,
    PRIMARY KEY (AlbumID, Genre, StartTime),
    FOREIGN KEY (AlbumID) REFERENCES Album(AlbumID)
);
*/